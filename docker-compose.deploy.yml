version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15
    container_name: loan_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-loan_db}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      # 使用命名卷持久化数据库数据
      - postgres_data:/var/lib/postgresql/data
    networks:
      - loan_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js 应用
  app:
    image: loan-app:latest
    container_name: loan_app
    restart: always
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-loan_db}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-secret-key-for-development-only}
      - HOST=0.0.0.0
      - PORT=3000
      - NEXT_PUBLIC_BASE_URL=https://42.121.104.68
      - NEXT_PUBLIC_API_URL=https://42.121.104.68/api
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - loan_network

  # Nginx 反向代理
  nginx:
    image: nginx:latest
    container_name: loan_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL 证书目录
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - loan_network

volumes:
  # 命名卷用于持久化数据库数据
  postgres_data:

networks:
  loan_network:
    driver: bridge