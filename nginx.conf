# Nginx 配置文件 - 支持 HTTPS 反向代理到 Docker 部署的 Next.js 应用

# 定义运行用户
user nginx;
# 工作进程数
worker_processes auto;
# 错误日志
error_log /var/log/nginx/error.log;
# 进程 PID
pid /var/run/nginx.pid;

# 工作模式和连接数上限
events {
    worker_connections 1024;
}

# HTTP 服务器配置
http {
    # 引入 MIME 类型
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # 访问日志
    access_log /var/log/nginx/access.log main;
    
    # 发送文件
    sendfile on;
    # TCP 优化
    tcp_nopush on;
    tcp_nodelay on;
    # 连接超时时间
    keepalive_timeout 65;
    # Gzip 压缩
    gzip on;
    
    # 定义上游服务器（Docker 容器中的 Next.js 应用）
    upstream loan_app {
        server app:3000;  # 使用 Docker 网络中的服务名称
    }
    
    # HTTP 服务器（重定向到 HTTPS）
    server {
        listen 80;
        server_name 42.121.104.68;
        
        # 重定向所有 HTTP 请求到 HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS 服务器
    server {
        # 监听 443 端口
        listen 443 ssl http2;
        server_name 42.121.104.68;
        
        # SSL 证书配置（需要替换为实际证书路径）
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL 配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 客户端最大 body 大小
        client_max_body_size 100M;
        
        # 静态文件缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://loan_app;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
        
        # API 路由代理
        location /api/ {
            proxy_pass http://loan_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
        }
        
        # WebSocket 连接
        location /socket.io/ {
            proxy_pass http://loan_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 主应用代理
        location / {
            proxy_pass http://loan_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 处理 Next.js 重定向和重写
            proxy_redirect off;
            
            # 必要的头部信息
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
        }
        
        # 错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}